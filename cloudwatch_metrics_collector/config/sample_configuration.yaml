# An optional metric namespace parameter. If provided it will set the namespace for all metrics provided by this node to
# the provided value. If the node is running on AWS RoboMaker, then the provided launch file will ignore this parameter in
# favor of the namespace specified by the AWS RoboMaker ecosystem
aws_metrics_namespace: "ros_metrics_collector"

# An optional list of topics to listen to. If not provided or is empty the node will just listen on the global "metrics"
# topic. If this list is not empty then the node will not subscribe to the "metrics" topic and will only subscribe to the
# topics in the list.
#aws_monitored_metric_topics: ["metrics"]

### Options related to uploading to CloudWatch ###

# Maximum number of items to add to the upload queue.
# If this limit is reached the metrics will start to be written to disk.
batch_max_queue_size: 1024

# Once this many log items are in the queue a cloudwatch metrics publish will be triggered.
# If this is not set the logs will be published on a constant timer regardless of the queue size.
# This must be smaller than batch_max_queue_size
#batch_trigger_publish_size: 64

# How many batches of metrics to send to CloudWatch in each upload
file_upload_batch_size: 50

# Maximum number of files in the upload queue when reading metrics that were saved due to being offline
file_max_queue_size: 2

# Maximum number of files in the upload queue when streaming live logs from the node to CloudWatch Metrics
stream_max_queue_size: 20

### Options related to offline file management ###
# When this node goes offline or cannot talk to CloudWatch it will store all metrics in text files on disk
# Then when it's back online it will upload them to CloudWatch. These are settings related to this feature.

# This prefix will be added to all offline metric storage files
file_prefix: "cwmetric"

# This file extension will be used for all offline metric storage files
file_extension: ".log"

# The maximum size of each file in offline storage in KB
maximum_file_size: 1024

# The absolute path to a folder that all offline metric files will be stored in
storage_directory: "~/.ros/cwmetrics/"

# The maximum size of all files in offline storage in KB
storage_limit: 1048576

# This is the AWS Client Configuration used by the AWS service client in the Node. If given the node will load the
# provided configuration when initializing the client.
aws_client_configuration:
    # Specifies where you want the client to communicate. Examples include us-east-1 or us-west-1. You must ensure that
    # the service you want to use has an endpoint in the region you configure.
    region: "us-west-2"

    # Built in the constructor and pulls information from your operating system. Do not alter the user agent.
    #user_agent: ""

    # Use this to override the http endpoint used to talk to a service. If you set this, you must also set authenticationRegion.
    #endpoint_override: ""

    # These settings allow you to configure a proxy for all communication with AWS. Examples of when this functionality
    # might be useful include debugging in conjunction with the Burp suite, or using a proxy to connect to the Internet.
    #proxy_host: ""
    #proxy_port: 0
    #proxy_user_name: ""
    #proxy_password: ""

    # Enables you to tell the HTTP client where to find your SSL certificate trust store (for example, a directory
    # prepared with OpenSSL's c_rehash utility). You shouldn't need to do this unless you are using symlinks in your
    # environment. This has no effect on Windows or OS X.
    #ca_path: ""
    #ca_file: ""

    # Values that determine the length of time, in milliseconds, to wait before timing out a request. You can increase
    # this value if you need to transfer large files, such as in Amazon S3 or Amazon CloudFront.
    request_timeout_ms: 2000
    connect_timeout_ms: 2000
    max_retries: 1
    no_retry_strategy: true

    # The maximum number of allowed connections to a single server for your HTTP communications. The default value is 25.
    # You can set this value as high as you can support the bandwidth. We recommend a value around 25.
    #max_connections: 25

    # Use dual stack endpoint in the endpoint calculation. You must ensure that the service you want to use supports ipv6 in the region you select.
    #use_dual_stack: false

    # Enable adjustment for clock skew
    #enable_clock_skew_adjustment: true

    # If set to true the http stack will follow redirect codes
    #follow_redirects: false

    # Specifies whether to enable SSL certificate verification. If necessary, you can disable SSL certificate verification by setting verifySSL to false.
    #verify_SSL: true

# This is the storage resolution level for presenting metrics in CloudWatch.
# Valid values are 1 and 60. Setting this to 1 specifies this metric as a
# high-resolution metric, so that CloudWatch stores the metric with sub-minute
# resolution down to one second. Setting this to 60 specifies this metric as a
# regular-resolution metric, which CloudWatch stores at 1-minute resolution.
# Currently, high resolution is available only for custom metrics. For more
# information about high-resolution metrics, see http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html
storage_resolution: 60
